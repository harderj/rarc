name: build

on:
  push:
    branches:
      - 'deploy'

env:
  CARGO_TERM_COLOR: always

jobs: # here we are specifing all of the jobs
  cleanup:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: ðŸ—‘ Delete deployment
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: github-pages
          onlyRemoveDeployments: true
  build:
    runs-on: ubuntu-latest # system, linux is the cheapest
    timeout-minutes: 30 
    concurrency: 
      group: ${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    needs: cleanup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/bin/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ github.ref || github.run_id }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Install udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev
      - name: Install wasm target
        run: rustup target install wasm32-unknown-unknown && cargo install -f wasm-bindgen-cli
      - name: Build
        run: cargo build --release --target wasm32-unknown-unknown && wasm-bindgen --out-dir ./out/ --target web ./target/wasm32-unknown-unknown/release/rarc.wasm  
      - name: Copy
        run: cp index.html out/index.html
      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          SQUASH_HISTORY: true
          REPO: self
          BRANCH: gh-pages # The branch name where you want to push the assets
          FOLDER: out # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message 